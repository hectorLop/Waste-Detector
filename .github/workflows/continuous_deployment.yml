name: Deploy to Amazon ECS

on:
  push:
    paths:
      - 'deployment/**'

jobs:
  deployment:
    name: 'Deployment'
    runs-on: 'ubuntu-latest'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          FRONTEND_REPOSITORY: ${{ secrets.FRONTEND_REPOSITORY }}
          BACKEND_REPOSITORY: ${{ secrets.BACKEND_REPOSITORY }}
         run: |
           cd deployment
           docker build -t $ECR_REGISTRY/$FRONTEND_REPOSITORY -f frontend.Dockerfile .
           docker push $ECR_REGISTRY/$FRONTEND_REPOSITORY

           docker build -t $ECR_REGISTRY/$BACKEND_REPOSITORY -f backend.Dockerfile .
           docker push $ECR_REGISTRY/$BACKEND_REPOSITORY

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: deployment/ecs-params.yml
          service: WasteDetector
          cluster: WasteDetector4
          wait-for-service-stability: true 
